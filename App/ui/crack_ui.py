# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'crack.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from classes.constantes import ALL_TYPES
from classes.crack import break_with_dict, brute_force_len
from . import file_upload


class CrackWidget(object):
    def setupUi(self, MainWindow):

        self.checkbox1 = False
        self.checkbox2 = False
        self.checkbox3 = False
        self.checkbox4 = False
        self.dict_word_path = ""
        self.hashes_word_path = ""
        self.hashes_word_path_brute = ""
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(848, 628)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 851, 611))
        self.tabWidget.setStyleSheet("QTabWidget::pane {\n"
                                     "    border: 1px solid black;\n"
                                     " \n"
                                     "}\n"
                                     "\n"
                                     "QTabWidget::tab-bar:top {\n"
                                     "    top: 1px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabWidget::tab-bar:bottom {\n"
                                     "    bottom: 1px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabWidget::tab-bar:left {\n"
                                     "    right: 1px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabWidget::tab-bar:right {\n"
                                     "    left: 1px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab {\n"
                                     "    border: 1px solid black;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:selected {\n"
                                     "    background: white;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:!selected {\n"
                                     "    background: silver;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:!selected:hover {\n"
                                     "    background: #999;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:top:!selected {\n"
                                     "    margin-top: 3px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:bottom:!selected {\n"
                                     "    margin-bottom: 3px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:top, QTabBar::tab:bottom {\n"
                                     "    min-width: 8ex;\n"
                                     "    margin-right: -1px;\n"
                                     "    padding: 5px 10px 5px 10px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:top:selected {\n"
                                     "    border-bottom-color: none;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:bottom:selected {\n"
                                     "    border-top-color: none;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:top:last, QTabBar::tab:bottom:last,\n"
                                     "QTabBar::tab:top:only-one, QTabBar::tab:bottom:only-one {\n"
                                     "    margin-right: 0;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:left:!selected {\n"
                                     "    margin-right: 3px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:right:!selected {\n"
                                     "    margin-left: 3px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:left, QTabBar::tab:right {\n"
                                     "    min-height: 8ex;\n"
                                     "    margin-bottom: -1px;\n"
                                     "    padding: 10px 5px 10px 5px;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:left:selected {\n"
                                     "    border-left-color: none;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:right:selected {\n"
                                     "    border-right-color: none;\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab:left:last, QTabBar::tab:right:last,\n"
                                     "QTabBar::tab:left:only-one, QTabBar::tab:right:only-one {\n"
                                     "    margin-bottom: 0;\n"
                                     "}")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(180, 380, 471, 171))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(1)
        self.tableWidget.setItem(0, 0, QtWidgets.QTableWidgetItem("Clair"))
        self.tableWidget.setItem(0, 1, QtWidgets.QTableWidgetItem("Hash√©"))
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.horizontalHeader().setSectionResizeMode(
            QtWidgets.QHeaderView.Stretch)
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(190, 60, 481, 41))
        self.label_2.setStyleSheet("QLabel{\n"
                                   "font: 20pt \"Lucida Calligraphy\";\n"
                                   "\n"
                                   "\n"
                                   "}")
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab)
        self.pushButton_2.setGeometry(QtCore.QRect(50, 190, 291, 51))
        self.pushButton_2.setStyleSheet("\n"
                                        "QPushButton{\n"
                                        "  display: block;\n"
                                        "  width: 200px;\n"
                                        "  height: 40px;\n"
                                        "  line-height: 40px;\n"
                                        "  font-size: 18px;\n"
                                        "  font-family: sans-serif;\n"
                                        "  text-decoration: none;\n"
                                        "  color: #333;\n"
                                        "  border: 2px solid #333;\n"
                                        "  letter-spacing: 2px;\n"
                                        "  text-align: center;\n"
                                        "  position: relative;\n"
                                        "  transition: all .35s;\n"
                                        "  border-radius:10px;\n"
                                        "}\n"
                                        "\n"
                                        "\n"
                                        "QPushButton::after{\n"
                                        "  position: absolute;\n"
                                        "  content: \"\";\n"
                                        "  top: 0;\n"
                                        "  left: 0;\n"
                                        "  width: 0;\n"
                                        "  height: 100%;\n"
                                        "  background: #ff003b;\n"
                                        "  transition: all .35s;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover{\n"
                                        "  color: #fff;\n"
                                        "  background: rgb(114, 255, 243);\n"
                                        "  \n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover::after{\n"
                                        "  width: 100%;\n"
                                        "}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_4 = QtWidgets.QLabel(self.tab)
        self.label_4.setGeometry(QtCore.QRect(220, 250, 341, 16))
        self.label_4.setObjectName("label_4")
        self.comboBox = QtWidgets.QComboBox(self.tab)
        self.comboBox.setGeometry(QtCore.QRect(280, 120, 211, 22))
        self.comboBox.setStyleSheet("QComboBox {\n"
                                    "    border: 3px solid gray;\n"
                                    "    border-radius: 3px;\n"
                                    "    padding: 1px 18px 1px 3px;\n"
                                    "    min-width: 6em;\n"
                                    "    border-radius:10px;\n"
                                    "}\n"
                                    "QComboBox:editable {\n"
                                    "    background: white;\n"
                                    "}\n"
                                    "\n"
                                    "\n"
                                    "QComboBox:!editable, QComboBox::drop-down:editable {\n"
                                    "     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
                                    "                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,\n"
                                    "                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);\n"
                                    "}\n"
                                    "\n"
                                    "/* QComboBox gets the \"on\" state when the popup is open */\n"
                                    "QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
                                    "    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
                                    "                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,\n"
                                    "                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);\n"
                                    "}\n"
                                    "\n"
                                    "QComboBox:on { /* shift the text when the popup opens */\n"
                                    "    padding-top: 3px;\n"
                                    "    padding-left: 4px;\n"
                                    "}\n"
                                    "\n"
                                    "QComboBox::drop-down {\n"
                                    "    subcontrol-origin: padding;\n"
                                    "    subcontrol-position: top right;\n"
                                    "    width: 15px;\n"
                                    "\n"
                                    "    border-left-width: 1px;\n"
                                    "    border-left-color: darkgray;\n"
                                    "    border-left-style: solid; /* just a single line */\n"
                                    "    border-top-right-radius: 3px; /* same radius as the QComboBox */\n"
                                    "    border-bottom-right-radius: 3px;\n"
                                    "}\n"
                                    "QComboBox::down-arrow:on { /* shift the arrow when popup is open */\n"
                                    "    top: 1px;\n"
                                    "    left: 1px;\n"
                                    "}\n"
                                    "\n"
                                    "")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab)
        self.pushButton_3.setGeometry(QtCore.QRect(440, 190, 291, 51))
        self.pushButton_3.setStyleSheet("\n"
                                        "QPushButton{\n"
                                        "  display: block;\n"
                                        "  width: 200px;\n"
                                        "  height: 40px;\n"
                                        "  line-height: 40px;\n"
                                        "  font-size: 18px;\n"
                                        "  font-family: sans-serif;\n"
                                        "  text-decoration: none;\n"
                                        "  color: #333;\n"
                                        "  border: 2px solid #333;\n"
                                        "  letter-spacing: 2px;\n"
                                        "  text-align: center;\n"
                                        "  position: relative;\n"
                                        "  transition: all .35s;\n"
                                        "  border-radius:10px;\n"
                                        "}\n"
                                        "\n"
                                        "\n"
                                        "QPushButton::after{\n"
                                        "  position: absolute;\n"
                                        "  content: \"\";\n"
                                        "  top: 0;\n"
                                        "  left: 0;\n"
                                        "  width: 0;\n"
                                        "  height: 100%;\n"
                                        "  background: #ff003b;\n"
                                        "  transition: all .35s;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover{\n"
                                        "  color: #fff;\n"
                                        "  background: rgb(114, 255, 243);\n"
                                        "  \n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover::after{\n"
                                        "  width: 100%;\n"
                                        "}")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_9 = QtWidgets.QPushButton(self.tab)
        self.pushButton_9.setGeometry(QtCore.QRect(240, 320, 291, 51))
        self.pushButton_9.setStyleSheet("\n"
                                        "QPushButton{\n"
                                        "  display: block;\n"
                                        "  width: 200px;\n"
                                        "  height: 40px;\n"
                                        "  line-height: 40px;\n"
                                        "  font-size: 18px;\n"
                                        "  font-family: sans-serif;\n"
                                        "  text-decoration: none;\n"
                                        "  color: #333;\n"
                                        "  border: 2px solid #333;\n"
                                        "  letter-spacing: 2px;\n"
                                        "  text-align: center;\n"
                                        "  position: relative;\n"
                                        "  transition: all .35s;\n"
                                        "  border-radius:10px;\n"
                                        "}\n"
                                        "\n"
                                        "\n"
                                        "QPushButton::after{\n"
                                        "  position: absolute;\n"
                                        "  content: \"\";\n"
                                        "  top: 0;\n"
                                        "  left: 0;\n"
                                        "  width: 0;\n"
                                        "  height: 100%;\n"
                                        "  background: #ff003b;\n"
                                        "  transition: all .35s;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover{\n"
                                        "  color: #fff;\n"
                                        "  background: rgb(114, 255, 243);\n"
                                        "  \n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover::after{\n"
                                        "  width: 100%;\n"
                                        "}")
        self.pushButton_9.setObjectName("pushButton_9")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_3 = QtWidgets.QLabel(self.tab_2)
        self.label_3.setGeometry(QtCore.QRect(140, 10, 481, 41))
        self.label_3.setStyleSheet("QLabel{\n"
                                   "font: 20pt \"Lucida Calligraphy\";\n"
                                   "\n"
                                   "\n"
                                   "}")
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit.setGeometry(QtCore.QRect(210, 130, 281, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.label_5 = QtWidgets.QLabel(self.tab_2)
        self.label_5.setGeometry(QtCore.QRect(140, 130, 47, 13))
        self.label_5.setObjectName("label_5")
        self.pushButton = QtWidgets.QPushButton(self.tab_2)
        self.pushButton.setGeometry(QtCore.QRect(20, 360, 271, 41))
        self.pushButton.setStyleSheet("\n"
                                      "QPushButton{\n"
                                      "  display: block;\n"
                                      "  width: 200px;\n"
                                      "  height: 40px;\n"
                                      "  line-height: 40px;\n"
                                      "  font-size: 18px;\n"
                                      "  font-family:sans-serif;\n"
                                      "  text-decoration: none;\n"
                                      "  color: #333;\n"
                                      "  border: 2px solid #333;\n"
                                      "  letter-spacing: 2px;\n"
                                      "  text-align: center;\n"
                                      "  position: relative;\n"
                                      "  transition: all .35s;\n"
                                      "  border-radius:10px;\n"
                                      "}\n"
                                      "\n"
                                      "\n"
                                      "QPushButton::after{\n"
                                      "  position: absolute;\n"
                                      "  content: \"\";\n"
                                      "  top: 0;\n"
                                      "  left: 0;\n"
                                      "  width: 0;\n"
                                      "  height: 100%;\n"
                                      "  background: #ff003b;\n"
                                      "  transition: all .35s;\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton::hover{\n"
                                      "  color: #fff;\n"
                                      "  background: rgb(114, 255, 243);\n"
                                      "  \n"
                                      "}\n"
                                      "\n"
                                      "QPushButton::hover::after{\n"
                                      "  width: 100%;\n"
                                      "}")
        self.pushButton.setObjectName("pushButton")
        self.checkBox_4 = QtWidgets.QCheckBox(self.tab_2)
        self.checkBox_4.setGeometry(QtCore.QRect(210, 300, 551, 21))
        self.checkBox_4.setStyleSheet("QCheckBox\n"
                                      "{\n"
                                      "font-size: 13px;\n"
                                      "font-weight: bold;\n"
                                      "height: 30px;\n"
                                      " margin-left: 5px;\n"
                                      "width: 100px;\n"
                                      "height: 50px;\n"
                                      "font-family: Georgia, serif;\n"
                                      "}\n"
                                      "\n"
                                      "\n"
                                      "QCheckBox::indicator {\n"
                                      "    width: 20px;\n"
                                      "    height: 20px;\n"
                                      "}\n"
                                      "QCheckBox::hover {\n"
                                      "    color:rgb(114, 255, 243);\n"
                                      "}")
        self.checkBox_4.setObjectName("checkBox_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(300, 330, 191, 23))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.checkBox_2 = QtWidgets.QCheckBox(self.tab_2)
        self.checkBox_2.setGeometry(QtCore.QRect(210, 220, 341, 21))
        self.checkBox_2.setStyleSheet("QCheckBox\n"
                                      "{\n"
                                      "font-size: 13px;\n"
                                      "font-weight: bold;\n"
                                      "height: 30px;\n"
                                      " margin-left: 5px;\n"
                                      "width: 100px;\n"
                                      "height: 50px;\n"
                                      "font-family: Georgia, serif;\n"
                                      "}\n"
                                      "\n"
                                      "\n"
                                      "QCheckBox::indicator {\n"
                                      "    width: 20px;\n"
                                      "    height: 20px;\n"
                                      "}\n"
                                      "QCheckBox::hover {\n"
                                      "    color:rgb(114, 255, 243);\n"
                                      "}")
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox = QtWidgets.QCheckBox(self.tab_2)
        self.checkBox.setGeometry(QtCore.QRect(210, 170, 301, 31))
        self.checkBox.setStyleSheet("QCheckBox\n"
                                    "{\n"
                                    "font-size: 13px;\n"
                                    "font-weight: bold;\n"
                                    "height: 30px;\n"
                                    " margin-left: 5px;\n"
                                    "width: 100px;\n"
                                    "height: 50px;\n"
                                    "font-family: Georgia, serif;\n"
                                    "}\n"
                                    "\n"
                                    "\n"
                                    "QCheckBox::indicator {\n"
                                    "    width: 20px;\n"
                                    "    height: 20px;\n"
                                    "}\n"
                                    "QCheckBox::hover {\n"
                                    "    color:rgb(114, 255, 243);\n"
                                    "}")
        self.checkBox.setObjectName("checkBox")
        self.checkBox_3 = QtWidgets.QCheckBox(self.tab_2)
        self.checkBox_3.setGeometry(QtCore.QRect(210, 260, 361, 21))
        self.checkBox_3.setStyleSheet("QCheckBox\n"
                                      "{\n"
                                      "font-size: 13px;\n"
                                      "font-weight: bold;\n"
                                      "height: 30px;\n"
                                      " margin-left: 5px;\n"
                                      "width: 100px;\n"
                                      "height: 50px;\n"
                                      "font-family: Georgia, serif;\n"
                                      "}\n"
                                      "\n"
                                      "\n"
                                      "QCheckBox::indicator {\n"
                                      "    width: 20px;\n"
                                      "    height: 20px;\n"
                                      "}\n"
                                      "QCheckBox::hover {\n"
                                      "    color:rgb(114, 255, 243);\n"
                                      "}")
        self.checkBox_3.setObjectName("checkBox_3")
        self.label_6 = QtWidgets.QLabel(self.tab_2)
        self.label_6.setGeometry(QtCore.QRect(220, 330, 57, 15))
        self.label_6.setStyleSheet("QLabel{\n"
                                   "font-family:Georgia, serif;\n"
                                   "}")
        self.label_6.setObjectName("label_6")
        self.pushButton_5 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_5.setGeometry(QtCore.QRect(520, 360, 271, 41))
        self.pushButton_5.setStyleSheet("\n"
                                        "QPushButton{\n"
                                        "  display: block;\n"
                                        "  width: 200px;\n"
                                        "  height: 40px;\n"
                                        "  line-height: 40px;\n"
                                        "  font-size: 18px;\n"
                                        "  font-family:sans-serif;\n"
                                        "  text-decoration: none;\n"
                                        "  color: #333;\n"
                                        "  border: 2px solid #333;\n"
                                        "  letter-spacing: 2px;\n"
                                        "  text-align: center;\n"
                                        "  position: relative;\n"
                                        "  transition: all .35s;\n"
                                        "  border-radius:10px;\n"
                                        "}\n"
                                        "\n"
                                        "\n"
                                        "QPushButton::after{\n"
                                        "  position: absolute;\n"
                                        "  content: \"\";\n"
                                        "  top: 0;\n"
                                        "  left: 0;\n"
                                        "  width: 0;\n"
                                        "  height: 100%;\n"
                                        "  background: #ff003b;\n"
                                        "  transition: all .35s;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover{\n"
                                        "  color: #fff;\n"
                                        "  background: rgb(114, 255, 243);\n"
                                        "  \n"
                                        "}\n"
                                        "\n"
                                        "QPushButton::hover::after{\n"
                                        "  width: 100%;\n"
                                        "}")
        self.pushButton_5.setObjectName("pushButton_5")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_2.setGeometry(QtCore.QRect(200, 410, 471, 171))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setRowCount(1)
        self.tableWidget_2.setColumnCount(2)
        self.tableWidget_2.setItem(0, 0, QtWidgets.QTableWidgetItem("Clair"))
        self.tableWidget_2.setItem(0, 1, QtWidgets.QTableWidgetItem("Hash√©"))

        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_2.horizontalHeader().setSectionResizeMode(
            QtWidgets.QHeaderView.Stretch)

        self.comboBox_3 = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_3.setGeometry(QtCore.QRect(250, 70, 201, 22))
        self.comboBox_3.setStyleSheet("QComboBox {\n"
                                      "    border: 3px solid gray;\n"
                                      "    border-radius: 3px;\n"
                                      "    padding: 1px 18px 1px 3px;\n"
                                      "    min-width: 6em;\n"
                                      "    border-radius:10px;\n"
                                      "}\n"
                                      "QComboBox:editable {\n"
                                      "    background: white;\n"
                                      "}\n"
                                      "\n"
                                      "\n"
                                      "QComboBox:!editable, QComboBox::drop-down:editable {\n"
                                      "     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
                                      "                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,\n"
                                      "                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);\n"
                                      "}\n"
                                      "\n"
                                      "/* QComboBox gets the \"on\" state when the popup is open */\n"
                                      "QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
                                      "    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
                                      "                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,\n"
                                      "                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);\n"
                                      "}\n"
                                      "\n"
                                      "QComboBox:on { /* shift the text when the popup opens */\n"
                                      "    padding-top: 3px;\n"
                                      "    padding-left: 4px;\n"
                                      "}\n"
                                      "\n"
                                      "QComboBox::drop-down {\n"
                                      "    subcontrol-origin: padding;\n"
                                      "    subcontrol-position: top right;\n"
                                      "    width: 15px;\n"
                                      "\n"
                                      "    border-left-width: 1px;\n"
                                      "    border-left-color: darkgray;\n"
                                      "    border-left-style: solid; /* just a single line */\n"
                                      "    border-top-right-radius: 3px; /* same radius as the QComboBox */\n"
                                      "    border-bottom-right-radius: 3px;\n"
                                      "}\n"
                                      "QComboBox::down-arrow:on { /* shift the arrow when popup is open */\n"
                                      "    top: 1px;\n"
                                      "    left: 1px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.checkBox.clicked.connect(self.checkbox_touched)
        self.checkBox_2.clicked.connect(self.checkbox_2_touched)
        self.checkBox_3.clicked.connect(self.checkbox_3_touched)
        self.checkBox_4.clicked.connect(self.checkbox_4_touched)
        self.pushButton.clicked.connect(self.brute_force_attack)
        self.pushButton_2.clicked.connect(self.import_hashes)
        self.pushButton_3.clicked.connect(self.import_dict)
        self.pushButton_5.clicked.connect(self.import_hashes_brute)
        self.pushButton_9.clicked.connect(self.dict_attack)
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate(
            "MainWindow", "Attaque par dictionnaire"))
        self.pushButton_2.setText(_translate(
            "MainWindow", "Importer les hach√©s"))
        self.label_4.setText(_translate(
            "MainWindow", "NB:Le fichier doit etre au format txt et contenir des lignes de hach√©s"))
        self.comboBox.setItemText(0, _translate("MainWindow", "MD5"))
        self.comboBox.setItemText(1, _translate("MainWindow", "SHA256"))
        self.pushButton_3.setText(_translate(
            "MainWindow", "Importer un dictionnaire"))
        self.pushButton_9.setText(_translate("MainWindow", "Envoyer"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab), _translate("MainWindow", "Attaque par dictionnaire"))
        self.label_3.setText(_translate(
            "MainWindow", "Attaque par force brute"))
        self.label_5.setText(_translate("MainWindow", "hash"))
        self.pushButton.setText(_translate("MainWindow", "Rechercher le mot"))
        self.checkBox_4.setText(_translate(
            "MainWindow", "Avec des caract√®res sp√©ciaux [ ~ ! @ # $ % ^ & * ( ) - _ = + [ ] { } ; : , . < > / ? | ]"))
        self.checkBox_2.setText(_translate(
            "MainWindow", "Avec des lettres minuscules [ a b c ... x y z ]"))
        self.checkBox.setText(_translate(
            "MainWindow", "Avec des chiffres [ 0 1 2 3 4 5 6 7 8 9 ]"))
        self.checkBox_3.setText(_translate(
            "MainWindow", " Avec des lettres majuscules [ A B C ... X Y Z ]"))
        self.label_6.setText(_translate("MainWindow", "Longueur"))
        self.pushButton_5.setText(_translate(
            "MainWindow", "Selectionner un fichier"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "MD5"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "SHA256"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab_2), _translate("MainWindow", "Attaque par force brute"))

    def message_box_creation(self, title, text):
        message_box = QtWidgets.QMessageBox()
        message_box.setWindowTitle(title)
        message_box.setText(text)
        message_box.exec()

    def import_hashes(self):
        file_widget = file_upload.FileDialogWidget()
        self.hashes_word_path = file_widget.openFileNameDialog()

    def import_dict(self):
        file_widget = file_upload.FileDialogWidget()
        self.dict_word_path = file_widget.openFileNameDialog()

    def checkbox_touched(self):
        self.checkbox1 = not self.checkbox1

    def import_hashes_brute(self):
        file_widget = file_upload.FileDialogWidget()
        self.hashes_word_path_brute = file_widget.openFileNameDialog()

    def checkbox_2_touched(self):
        self.checkbox2 = not self.checkbox2

    def checkbox_3_touched(self):
        self.checkbox3 = not self.checkbox3

    def checkbox_4_touched(self):
        self.checkbox4 = not self.checkbox4

    def dict_attack(self):

        if(self.dict_word_path and self.hashes_word_path):
            found_words = break_with_dict(
                self.hashes_word_path, self.dict_word_path, self.comboBox.currentText().lower())

            if(not found_words):
                self.message_box_creation(
                    "Aucun resultat", "Veuillez utiliser un autre dictionnaire ou vous n'avez pas choisi le bon hachage")
            else:
                self.tableWidget.setColumnCount(2)
                self.tableWidget.setRowCount(len(found_words)+1)
                for i in range(1, len(found_words)+1):
                    for column in range(2):
                        if(column == 1):
                            self.tableWidget.setItem(
                                i, column, QtWidgets.QTableWidgetItem(found_words[i-1][1]))
                        else:
                            self.tableWidget.setItem(
                                i, column, QtWidgets.QTableWidgetItem(found_words[i-1][0]))

            self.hashes_word_path = ""
            self.dict_word_path = ""
        elif(not self.dict_word_path):
            self.message_box_creation(
                "Erreur", "Vous n'avez pas import√© de dictionaire")
        elif(not self.hashes_word_path):
            self.message_box_creation(
                "Erreur", "Vous n'avez pas import√© les mots hach√©s")

    def brute_force_attack(self):
        len_word = self.lineEdit_2.text()
        hash = self.lineEdit.text()

        regex_pass = []
        if(self.checkbox1):
            regex_pass.extend(ALL_TYPES['numeric'])
        if(self.checkbox2):
            regex_pass.extend(ALL_TYPES['alphalower'])
        if(self.checkbox3):
            regex_pass.extend(ALL_TYPES['alphaupper'])
        if(self.checkbox4):
            regex_pass.extend(ALL_TYPES['specialschars'])

        elif(hash and self.hashes_word_path_brute):
            self.message_box_creation(
                "Erreur", "Veuillez choisir entre un hash ou le fichier de hash")

        elif(len_word.isdigit() and hash):
            len_word = int(len_word)

            if(len_word > 0):
                found_words = []
                if(regex_pass):
                    found_words = brute_force_len(
                        regex_pass, hash, len_word, self.comboBox_3.currentText().lower())
                else:
                    found_words = brute_force_len(
                        ALL_TYPES["alphanum"], hash, len_word, self.comboBox_3.currentText().lower())
                if(found_words):
                    self.tableWidget_2.setRowCount(len(found_words)+1)
                    for i in range(1, len(found_words)+1):
                        for column in range(2):
                            if(column == 1):
                                self.tableWidget_2.setItem(
                                    i, column, QtWidgets.QTableWidgetItem(found_words[i-1][1]))
                            else:
                                self.tableWidget_2.setItem(
                                    i, column, QtWidgets.QTableWidgetItem(found_words[i-1][0]))

                else:
                    self.message_box_creation(
                        "Aucun resultat", "Mauvais crit√®res ou mot de passe incassable")
            else:
                self.message_box_creation(
                    "Erreur", "Entrez un entier sup√©rieur √† 0")

        else:

            self.message_box_creation("Erreur", "Veuillez entrer un nombre")
